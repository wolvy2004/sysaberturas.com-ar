---
import { Icon } from "astro-icon/components";
interface material {
  nombre: string; 
  id?: number;
}

const materiales: Array<material> = [
  {
    id: 1,
    nombre: "aluminio",
  },
  { id: 2, nombre: "pvc" },
  {
    id: 3,
    nombre: "madera",
  },
];
---

<section id="presupuesto">
  <article class="form_presupuesto">
    <h1 class="saira-condensed-medium text-5xl text-center p-3 uppercase title">
      presupuesto
    </h1>
    <form id="formulario" action="">
      <fieldset>
        <legend>Datos Personales</legend>
        <div class="input_label">
          <input type="text" id="name" required placeholder=" "/>
          <label for="name">Apellido y Nombre</label>
          <Icon name="mdi:account" />
        </div>
        <div class="input_label">
          <input type="text" name="email" id="email"required placeholder=" " />
          <label for="email">email</label>
          <Icon name="mdi:email" />
        </div>
      </fieldset>
      <fieldset>
        <legend>Pedido</legend>
        <select name="material" id="material">
          <option value="0">Seleccionar Material </option>
          {
            materiales.map((m) => (
              <option value={m.id}>{m.nombre.toUpperCase()} </option>
            ))
          }
        </select>
        <select name="linea" id="linea">
          <option value="0" aria-readonly="true">Seleccione un producto</option>
        </select>
        <div class="content-medida">
          <input type="number" required placeholder=" " name="alto" />
          <label for="alto">altura</label>
          <input type="number" required placeholder=" " name="ancho" />
          <label for="alto">ancho</label>
        </div>
      </fieldset>
    </form>
  </article>
</section>
<script is:inline>
  const linea = [
    [],
    ["herrero", "modena", "premium"],
    ["economica", "media", "premium"],
    ["melamina", "contrachapado", "mdf"],
  ];
  const tipo = [
    ["Puerta", "Ventana", "Porton"],
    ["Ciega", "Con vidrio repartido", "Vidrio entero"],
    ["Con vidrio repartido", "Vidrio entero"],
    ["Corrediza", "Patagonica"],
  ];
  let select_material = document.getElementById("material");
  let select_linea = document.getElementById("linea");
  select_material.addEventListener("change", (e) => {
    // removemos los options

    if (select_linea != null) {
      while (select_linea.firstChild) {
        select_linea.removeChild(select_linea.firstChild);
      }
    }

    select_prod_linea = linea[select_material.value];

    if (select_prod_linea.length > 0) {
      select_prod_linea.forEach((linea) => {
        let option = document.createElement("option");
        option.setAttribute("value", linea);
        text = document.createTextNode(linea);
        option.appendChild(text);
        select_linea.appendChild(option);
      });
    }
  });
</script>
<style>
  .title {
    background: linear-gradient(to top, rgb(106, 5, 120), rgb(76, 6, 85));
   
  }
  section {
    height: 100vh;
    background-color: var(--var-violet200);
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .form_presupuesto {
    background-color: var(--var-bg-color);
    padding: 15px;
    width: 80%;
    height: 90%;
    border-radius: 10px;
  }
  #formulario {
    margin-top: 25px;
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  #formulario fieldset {
    
    border-radius: 5px;
    width: 100%;
    padding: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
    box-shadow: 0 0 10px rgb(106, 5, 120, 0.2);
  }
  #formulario legend {
    background-color: var(--var-bg-color);
    padding: 15px;
    text-align: center;
    color: var(--var-text-color);
  }
  .input_label {
    position: relative;
    width: 45%;
    margin: 15px;
  }
  .select,
  input,
  select {
    outline: none;
    color: var(--var-text-color);
    margin: 1em;
    padding: 0.5em;
    border-bottom: 2px solid var(--var-grey100);
    border-radius: 5px;
    width: 100%;
    padding-left: 39px;
  }
  label{
    position: absolute;
    top: 25px;
    left: 55px;
    color: var(--var-grey200);
    transition: 0.5s ease-in-out;
    
  }
  input:focus,
    textarea:focus {
      border-color: var(--var-violet200);
     
    }
  input::placeholder{
    color: transparent
  }
  svg{
    position: absolute;
    top: 27px;
    left: 30px;
    font-size: 1.2em;
    color: var(--var-grey200);
    transition: 0.5s ease;
   }
   input:focus ~ svg{
    color: var(--var-primary-color);
   }
   input:focus + label,
    textarea:focus + label,
    input:not(:placeholder-shown) ~ label,
    textarea:not(:placeholder-shown) ~ label {
      top: -5px;
      left: 15px;
      font-size: 12px;
      color: var(--var-primary-color);
    }
</style>
